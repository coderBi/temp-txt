1，如果一个类中有虚函数（包括父类如果有虚函数）就会创建一个虚函数表。对于有虚函数表的类创建对象的时候，
会在对象数据空间的最前面放一个或者多个虚函数表的地址。这个初始化工作，可以认为在初始化列表之前进行。
2，每一个类的虚函数表的共享的，多个对象的每一个数据空间前面存有虚函数表的地址
3，如果一个类继承多个父类，对于每一个存在虚函数的父类都会建立一张虚函数表。按照继承书写的顺序，第一个有虚函数的父类
的虚函数依次（按照类中申明顺序）存放到第一个虚函数表的前面部分，后面跟着填充的是这个之类的虚函数列表。其他的父类如果
有虚函数列表，会依次填入第 2 3 ... 个虚函数表中。这些虚函数表的地址存在到每一个对象的数据空间的前面 n * sizeof(int*)空间中
4，对于第一个虚函数表，如果父类中的虚函数被子类覆盖，那么这个子类的虚函数的地址会覆盖到父类的相应函数的位置（子类
这个虚函数不会被保存两次指针，因为覆盖的时候存了，后面的子类的虚函数列表中就没了）。对于第2 3 ... 个虚函数表，如果存在覆盖，
子类的相应函数地址同样会覆盖父类列表的相应位置。只是对于除了第一个虚拟函数表之外其他的虚拟函数表中不单独存放子类的虚函数地址列表.
5，对象访问虚函数时，会依次查找虚函数表，由于父类的函数指针被盖掉了，也就只能访问到子类的相应函数了。

*************看到一个很好的解析网页：http://blog.csdn.net/zkl99999/article/details/50921735